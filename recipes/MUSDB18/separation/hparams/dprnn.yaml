# ################################
# Model: SepFormer for source separation
# https://arxiv.org/abs/2010.13154
# Dataset : WSJ0-2mix and WSJ0-3mix
# ################################
# Basic parameters
# Seed needs to be set at top of yaml, before objects with parameters are made
#
seed: 1234
__set_seed: !apply:torch.manual_seed [!ref <seed>]

# Data params

# e.g. '/yourpath/wsj0-mix/2speakers'
# end with 2speakers for wsj0-2mix or 3speakers for wsj0-3mix
data_folder: musdb18

# Data restore path
origin_datapath: /mnt/md1/datasets/musdb18
target_datapath: musdb18

# the path for wsj0/si_tr_s/ folder -- only needed if dynamic mixing is used
# e.g. /yourpath/wsj0-processed/si_tr_s/
base_folder_dm: /yourpath/wsj0-processed/si_tr_s/

experiment_name: dprnn-baseline-100epoch
output_folder: !ref results/<experiment_name>/<seed>
train_log: !ref <output_folder>/train_log.txt
save_folder: !ref <output_folder>/save
train_data: !ref <save_folder>/musdb18_train.csv
valid_data: !ref <save_folder>/musdb18_valid.csv
test_data: !ref <save_folder>/musdb18_test.csv
nomalize_data: !ref /mnt/md1/user_victor/speechbrain/recipes/MUSDB18/meta/musdb.json
skip_prep: False


# Experiment params
auto_mix_prec: False # Set it to True for mixed precision
test_only: False
num_spks: 4
progressbar: True
save_audio: False # Save estimated sources on disk
sample_rate: 44100

# Training parameters
# accum_grad_count: 2
N_epochs: 100
batch_size: 1
lr: 0.00015
clip_grad_norm: 5
loss_upper_lim: 999999  # this is the upper limit for an acceptable loss
# if True, the training sequences are cut to a specified length
limit_training_signal_len: False
# this is the length of sequences if we choose to limit
# the signal length of training sequences
training_signal_len: 132300 # sample rate 44100 * 3
# valid_signal_len: 1764000 # sample rate 44100 * 40

train_seg_dur: 2 # train seg length (sec)
valid_seg_dur: 3 # valid seg length (sec)

# Set it to True to dynamically create mixtures at training time
dynamic_mixing: False

# Parameters for data augmentation
use_wavedrop: False
use_speedperturb: True
use_speedperturb_sameforeachsource: False
use_rand_shift: False
min_shift: -8000
max_shift: 8000

speedperturb: !new:speechbrain.lobes.augment.TimeDomainSpecAugment
    perturb_prob: 1.0
    drop_freq_prob: 0.0
    drop_chunk_prob: 0.0
    sample_rate: !ref <sample_rate>
    speeds: [95, 100, 105]

wavedrop: !new:speechbrain.lobes.augment.TimeDomainSpecAugment
    perturb_prob: 0.0
    drop_freq_prob: 1.0
    drop_chunk_prob: 1.0
    sample_rate: !ref <sample_rate>

# loss thresholding -- this thresholds the training loss
threshold_byloss: True
threshold: -30

# Encoder parameters
N_encoder_out: 256
out_channels: 256
kernel_size: 16
kernel_stride: 8

# Dataloader options
dataloader_opts:
    batch_size: !ref <batch_size>
    num_workers: 3

# Specifying the network
Encoder: !new:speechbrain.lobes.models.dual_path.Encoder
    kernel_size: !ref <kernel_size>
    out_channels: !ref <N_encoder_out>


intra: !new:speechbrain.lobes.models.dual_path.SBRNNBlock
    num_layers: 1
    input_size: !ref <out_channels>
    hidden_channels: !ref <out_channels>
    dropout: 0
    bidirectional: True

inter: !new:speechbrain.lobes.models.dual_path.SBRNNBlock
    num_layers: 1
    input_size: !ref <out_channels>
    hidden_channels: !ref <out_channels>
    dropout: 0
    bidirectional: True

MaskNet: !new:speechbrain.lobes.models.dual_path.Dual_Path_Model
    num_spks: !ref <num_spks>
    in_channels: !ref <N_encoder_out>
    out_channels: !ref <out_channels>
    num_layers: 6
    K: 250
    intra_model: !ref <intra>
    inter_model: !ref <inter>
    norm: ln
    linear_layer_after_inter_intra: True
    skip_around_intra: True

Decoder: !new:speechbrain.lobes.models.dual_path.Decoder
    in_channels: !ref <N_encoder_out>
    out_channels: 1
    kernel_size: !ref <kernel_size>
    stride: !ref <kernel_stride>
    bias: False

optimizer: !name:torch.optim.Adam
    lr: !ref <lr>
    weight_decay: 0

loss: !name:speechbrain.nnet.losses.l1_loss

sisnr: !name:speechbrain.nnet.losses.cal_si_snr

lr_scheduler: !new:speechbrain.nnet.schedulers.ReduceLROnPlateau
    factor: 0.5
    patience: 2
    dont_halve_until_epoch: 85

epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
    limit: !ref <N_epochs>

modules:
    encoder: !ref <Encoder>
    decoder: !ref <Decoder>
    masknet: !ref <MaskNet>

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
    checkpoints_dir: !ref <save_folder>
    recoverables:
        encoder: !ref <Encoder>
        decoder: !ref <Decoder>
        masknet: !ref <MaskNet>
        counter: !ref <epoch_counter>
        lr_scheduler: !ref <lr_scheduler>

train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
    save_file: !ref <train_log>
